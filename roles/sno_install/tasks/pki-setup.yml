- name: Reset ca folder
  ansible.builtin.shell: |
    mkdir -p "{{ ca_folder }}"
    rm -f "{{ ca_folder }}/{{ item }}-ca-kube"
  with_items: "{{ inventory_hostname_short }}"

- name: Does the firefox profile exist
  ansible.builtin.stat:
    path: "{{ firefox_profile }}"
  register: profile_path

- name: Init firefox profile path
  ansible.builtin.shell: |
    mkdir -p "{{ firefox_profile }}"
  when: not profile_path.stat.exists

# KUBECONFIG certificate-authority-data has the CA only for the API endpoint, we want all of them
#/home/michele/Bin/yq '.clusters[0].cluster.certificate-authority-data' {{ item }}-kubeconfig | base64 -d > "{{ ca_folder }}/{{ item }}-ca-api"
- name: Fetch all CAs for each cluster
  ansible.builtin.shell: |
    set -x -e -o pipefail
    export KUBECONFIG=/home/michele/{{ item }}-kubeconfig
    oc get -n default configmap/kube-root-ca.crt -o jsonpath="{.data.ca\.crt}" > "{{ ca_folder }}/{{ item }}-ca-kube"
  with_items: "{{ inventory_hostname_short }}"

- name: Delete exiting CAs from SNOs
  ansible.builtin.shell: |
    set -e -o pipefail
    rm -f {{ ca_folder }}/cert*
    awk 'BEGIN {c=0;} /BEGIN CERTIFICATE/ {c++} {print > "{{ item }}-cert" c ".pem"}' < {{ ca_folder }}/{{ item }}-ca-kube
    for i in cert*; do
      certutil -D -n "{{ item }}-$i-kube" -d sql:"{{ firefox_profile }}" || true
    done
  args:
    chdir: "{{ ca_folder }}"
  with_items: "{{ inventory_hostname_short }}"

- name: Import all CAs into my firefox profile
  ansible.builtin.shell: |
    set -e -o pipefail
    rm -f {{ ca_folder }}/cert*
    awk 'BEGIN {c=0;} /BEGIN CERTIFICATE/ {c++} {print > "{{ item }}-cert" c ".pem"}' < {{ ca_folder }}/{{ item }}-ca-kube
    for i in cert*; do
      certutil -A -n "{{ item }}-$i-kube" -t "TC,C,C"  -i "$i" -d sql:"{{ firefox_profile }}"
    done
  args:
    chdir: "{{ ca_folder }}"
  with_items: "{{ inventory_hostname_short }}"

