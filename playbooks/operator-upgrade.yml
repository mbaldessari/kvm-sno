---
- name: Test operator upgrades
  hosts: localhost
  connection: local
  gather_facts: false
  become: true
  become_user: michele
  vars:
    vp_operator_tempfolder: "~/sno-vp-operator"
    gitrepo: https://github.com/validatedpatterns/patterns-operator
    upgrade_from: 0.0.51
    upgrade_to: main
    hub: sno1
    spoke: sno2
    from_version: 6.6.6
    to_version: 6.6.7
    registry: kuemper.int.rhx/bandini
    mcgtempfolder: "~/sno-mcg"
    mcggitrepo: https://github.com/validatedpatterns/multicloud-gitops
    mcggitbranch: main
  tasks:
    - name: Print versions
      ansible.builtin.debug:
        msg: "Testing upgrade on {{ hub }}-{{ spoke }} from {{ upgrade_from }} to {{ upgrade_to }} of {{ gitrepo }}"

    - name: Check that all kubeconfig files exist
      ansible.builtin.stat:
        path: "~/{{ item }}-kubeconfig"
      with_items:
        - "{{ hub }}"
        - "{{ spoke }}"
      register: kubeconfig_files

    - name: Verifying if files exists
      ansible.builtin.debug:
        msg: "File {{ item.stat.path }} exist"
      loop: "{{ kubeconfig_files.results }}"
      loop_control:
        label: "{{ item.stat.path }}"
      failed_when: not item.stat.exists

    - name: Delete temporary folder
      ansible.builtin.file:
        path: "{{ vp_operator_tempfolder }}"
        state: absent

    - name: Clone operator git repo using version "{{ upgrade_from }}"
      ansible.builtin.git:
        repo: "{{ gitrepo }}"
        version: "{{ upgrade_from }}"
        dest: "{{ vp_operator_tempfolder }}/patterns-operator"
        clone: true
      tags:
        - operator-install

    - name: Build and upload operator version {{ upgrade_from }} - {{ from_version }} to hub
      ansible.builtin.shell: |
        export KUBECONFIG=~/{{ hub }}-kubeconfig
        make VERSION={{ from_version }} IMAGE_TAG_BASE={{ registry }}/patterns-operator \
            IMG={{ registry }}/patterns-operator:{{ from_version }} \
            CHANNELS=fast bundle generate docker-build docker-push bundle-build bundle-push catalog-build catalog-push catalog-install
      args:
        chdir: "{{ vp_operator_tempfolder }}/patterns-operator"
      tags:
        - operator-install

    - name: Wait for the catalog source to show up
      ansible.builtin.shell: |
        export KUBECONFIG=~/{{ hub }}-kubeconfig
        oc get -n openshift-marketplace packagemanifests -l "catalog=test-pattern-operator" --field-selector "metadata.name=patterns-operator"
      retries: 20
      delay: 10
      register: catalogsource_ret
      until: catalogsource_ret is not failed
      tags:
        - operator-install

    - name: Install the subscription and operator
      ansible.builtin.shell: |
        set -e
        export KUBECONFIG=~/{{ hub }}-kubeconfig
        cat > /tmp/vp-sub.yaml<<EOF
        apiVersion: operators.coreos.com/v1alpha1
        kind: Subscription
        metadata:
          name: patterns-operator
          namespace: openshift-operators
          labels:
            operators.coreos.com/patterns-operator.openshift-operators: ""
        spec:
          channel: fast
          installPlanApproval: Automatic
          name: patterns-operator
          source: test-pattern-operator
          sourceNamespace: openshift-marketplace
        EOF
        oc apply -f /tmp/vp-sub.yaml
      tags:
        - operator-install

    - name: Wait for the operator to be installed
      ansible.builtin.shell: |
        export KUBECONFIG=~/{{ hub }}-kubeconfig
        oc get -n openshift-marketplace packagemanifests -l "catalog=test-pattern-operator" --field-selector "metadata.name=patterns-operator"  &> /dev/null
      retries: 20
      delay: 10
      register: operatorinstall_ret
      until: operatorinstall_ret is not failed
      tags:
        - operator-install

    - name: Wait for the installplan to be completed
      ansible.builtin.shell: |
        export KUBECONFIG=~/{{ hub }}-kubeconfig
        oc get installplan -n openshift-operators $(oc get installplan -A |grep patterns-operator |awk '{ print $2 }') -o jsonpath='{.status.phase}'
      retries: 20
      delay: 10
      register: installplan_ret
      until: installplan_ret.stdout == "Complete"

    - name: Clone mcg git repo
      ansible.builtin.git:
        repo: "{{ mcggitrepo }}"
        version: "{{ mcggitbranch }}"
        dest: "{{ mcgtempfolder }}/multicloud-gitops"
        clone: true
      tags:
        - operator-install

    - name: Install pattern on HUB/{{ hub }}
      ansible.builtin.shell: |
        set -e -o pipefail
        export KUBECONFIG=~/{{ hub }}-kubeconfig
        ./pattern.sh make install
      args:
        chdir: "{{ mcgtempfolder }}/multicloud-gitops"
      tags:
        - operator-install

    - name: Wait for all argo apps to be green
      ansible.builtin.shell: |
        set -e -o pipefail
        export KUBECONFIG=~/{{ hub }}-kubeconfig
        make argo-healthcheck
      args:
        chdir: "{{ mcgtempfolder }}/multicloud-gitops"
      retries: 100
      delay: 20
      register: argo
      until: argo is not failed
      tags:
        - operator-install

    - name: Wait for ManagedCluster API to show up
      ansible.builtin.shell: |
        set -e -o pipefail
        export KUBECONFIG=~/{{ hub }}-kubeconfig
        oc api-resources | grep cluster.open-cluster-management.io/v1 | grep ManagedCluster
      retries: 80
      delay: 20
      register: managedcluster_api
      until: managedcluster_api is not failed
      tags:
        - operator-install

    - name: Add {{ spoke }}
      ansible.builtin.set_fact:
        HUBCONFIG: "{{ '~/{{ hub }}-kubeconfig' | expanduser }}"
        REGIONCONFIG: "{{ '~/{{ spoke }}-kubeconfig' | expanduser }}"
      tags:
        - operator-install

    - name: Import {{ spoke }}
      ansible.builtin.import_role:
        name: acm_import
      retries: 10
      delay: 30
      register: acm1
      until: acm1 is not failed
      tags:
        - operator-install

    - name: Wait for namespaced argo on spoke
      ansible.builtin.shell: |
        set -e -o pipefail
        export KUBECONFIG=~/{{ item }}-kubeconfig
        oc get argocds -A | grep multicloud-gitops-group-one
      args:
        chdir: "{{ mcgtempfolder }}/multicloud-gitops"
      retries: 100
      delay: 20
      register: argoregional
      until: argoregional is not failed
      with_items:
        - "{{ spoke }}"
      tags:
        - operator-install

    - name: Wait for all argo apps to be green on regional clusters
      ansible.builtin.shell: |
        set -e -o pipefail
        export KUBECONFIG=~/{{ item }}-kubeconfig
        make argo-healthcheck
      args:
        chdir: "{{ mcgtempfolder }}/multicloud-gitops"
      retries: 100
      delay: 20
      register: argoregional
      until: argoregional is not failed
      with_items:
        - "{{ spoke }}"
      tags:
        - operator-install

    - name: Reset operator git repo to upgraded version
      ansible.builtin.git:
        repo: "{{ gitrepo }}"
        version: "{{ upgrade_to }}"
        dest: "{{ vp_operator_tempfolder }}/patterns-operator"
        force: true
      tags:
        - operator-upgrade

    - name: Prepare catalog/template.yaml
      ansible.builtin.shell: |
        cat > catalog/template.yaml<<EOF
        schema: olm.package
        name: patterns-operator
        defaultChannel: fast
        ---
        schema: olm.channel
        package: patterns-operator
        name: fast
        entries:
        - name: patterns-operator.v{{ from_version }}
        - name: patterns-operator.v\$VERSION
          replaces: patterns-operator.v{{ from_version }}
        ---
        schema: olm.bundle
        image: {{ registry }}/patterns-operator-bundle:v{{ from_version }}
        ---
        schema: olm.bundle
        image: \$BUNDLE_IMG
        EOF
      args:
        chdir: "{{ vp_operator_tempfolder }}/patterns-operator"
      tags:
        - operator-upgrade

    - name: Build and upload upgraded operator version {{ upgrade_to }} - {{ to_version }}
      ansible.builtin.shell: |
        export KUBECONFIG=~/{{ hub }}-kubeconfig
        make VERSION={{ to_version }} IMAGE_TAG_BASE={{ registry }}/patterns-operator \
            IMG={{ registry }}/patterns-operator:{{ to_version }} \
            CHANNELS=fast bundle generate docker-build docker-push bundle-build bundle-push catalog-build catalog-push catalog-install
      args:
        chdir: "{{ vp_operator_tempfolder }}/patterns-operator"
      tags:
        - operator-upgrade

    - name: Patch subscription to make sure we're using the right catalog source
      ansible.builtin.shell: |
        export KUBECONFIG=~/{{ hub }}-kubeconfig
        oc patch -n openshift-operators subscription.operators.coreos.com/patterns-operator --type=json -p '[{"op": "replace", "path": "/spec/source", "value": "test-pattern-operator"}]'
      args:
        chdir: "{{ vp_operator_tempfolder }}/patterns-operator"
      tags:
        - operator-upgrade
