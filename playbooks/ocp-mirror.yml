---
- name: Mirror all needed container images locally
  hosts: kvm
  gather_facts: false
  become: true
  tasks:
    - name: Set oc-mirror bin
      ansible.builtin.set_fact:
        oc_mirror_bin: "{{ mirrorfolder }}/{{ ocp_version }}/oc-mirror"

    - name: Create folders
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      with_items:
        - "/root/.docker/"
        - "{{ local_mirror }}"
        - "{{ local_mirror }}/workspace"
        - "{{ local_mirror }}/helm"

    - name: Template pull secret
      ansible.builtin.template:
        dest: /root/.docker/config.json
        src: ../templates/pullsecret.json.j2
        mode: "0640"

    - name: Template image list script
      ansible.builtin.template:
        dest: /tmp/image-list.sh
        src: ../templates/image-list.sh
        mode: "0755"

    - name: Fetch all fusion access images
      ansible.builtin.shell: |
        /tmp/image-list.sh

    - name: Read all images
      ansible.builtin.shell: |
        cat /tmp/all-images.txt
      register: all_images

    # The initial template was created via:
    # ./oc mirror init --registry {{ oc_mirror_local_registry }}/{{ item }} > imageset-config.yaml
    # See: https://docs.openshift.com/container-platform/4.14/installing/disconnected_install/installing-mirroring-disconnected.html
    - name: Create imageset-config
      ansible.builtin.template:
        src: ../templates/imageset-config.yaml
        dest: "{{ local_mirror }}/imageset-config.yaml"
        mode: "0644"

    - name: Version of oc mirror
      ansible.builtin.shell: |
        set -e
        {{ oc_mirror_bin }} version --v2 --output=yaml
      register: oc_mirror_version
      args:
        chdir: "{{ oc_dir }}"

    - name: Print version
      ansible.builtin.debug:
        msg: "{{ oc_mirror_version.stdout }}"

    - name: Notify bandini
      ansible.builtin.shell: |
        curl -X POST http://raspyclock.int.rhx:8080/job -d "start"
      failed_when: false

    - name: Mirror images
      ansible.builtin.shell: |
        set -e
        #mirror --config=/var/lib/libvirt/ocp-mirror/mirror/imageset-config.yaml  --workspace file://tmp/workspace docker://nas.int.rhx  --v2
        {{ oc_mirror_bin }} --config={{ local_mirror }}/imageset-config.yaml --log-level=debug \
        --workspace file://{{ local_mirror }}/workspace docker://{{ oc_mirror_local_registry }} --v2 &> /var/log/oc-mirror.log
      args:
        chdir: "{{ oc_dir }}"
      retries: 1
      delay: 10

    - name: Copy mirror templates away
      ansible.builtin.shell: |
        mkdir -p "{{ local_mirror }}/yamls"
        cp -avf "{{ local_mirror }}/workspace/working-dir/cluster-resources" "{{ local_mirror }}/yamls"

    - name: Notify bandini
      ansible.builtin.shell: |
        curl -X POST http://raspyclock.int.rhx:8080/receive -d "Mirror Done! "
        curl -X POST http://raspyclock.int.rhx:8080/job -d "finished"
      failed_when: false
