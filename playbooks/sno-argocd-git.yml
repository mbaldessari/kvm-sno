---
- name: Install ArgoCD from git on sno
  hosts: localhost
  connection: local
  gather_facts: false
  become: true
  become_user: michele
  vars:
    argotempfolder: "/tmp/argocd-git/"
    argorepo: https://github.com/argoproj/argo-cd/
    argobranch: master
    node: sno1
    registry_url: fw.int.rhx/bandini
  tasks:
    - name: Check that all kubeconfig files exist
      ansible.builtin.stat:
        path: "~/{{ item }}-kubeconfig"
      with_items: "{{ snos | intersect(node) }}"
      register: kubeconfig_files

    - name: Verifying if files exists
      ansible.builtin.debug:
        msg: "File {{ item.stat.path }} exist"
      loop: "{{ kubeconfig_files.results }}"
      loop_control:
        label: "{{ item.stat.path }}"
      failed_when: not item.stat.exists

    - name: Create temporary folder
      ansible.builtin.file:
        path: "{{ argotempfolder }}/argo-cd"
        state: directory
        recurse: true

    - name: Clone git repo
      ansible.builtin.git:
        repo: "{{ argorepo }}"
        version: "{{ argobranch }}"
        dest: "{{ argotempfolder }}/argo-cd"
        clone: true
        force: true

    - name: Patch argo for podman
      ansible.builtin.shell: |
        set -e -o pipefail
        git reset --hard
        git clean -dxf
        curl https://acksyn.org/files/argocd/0001-Add-DOCKER_RUN_OPTIONAL_ARGS-variable-when-calling-d.patch | git am
        curl https://acksyn.org/files/argocd/0002-WIP-openshift-build-fixes.patch | git am
      args:
        chdir: "{{ argotempfolder }}/argo-cd"

    - name: Build and push the newly built container
      ansible.builtin.shell: |
        set -e -o pipefail
        make DOCKER_PUSH=true IMAGE_NAMESPACE="{{ registry_url }}" \
          DOCKER_RUN_OPTIONAL_ARGS="--userns=keep-id --security-opt label=disable" all &> "{{ argotempfolder }}/build.log"
      args:
        chdir: "{{ argotempfolder }}/argo-cd"

    - name: Tweak manifests for installation
      ansible.builtin.shell: |
        set -e -o pipefail
        make DOCKER_PUSH=true IMAGE_NAMESPACE="{{ registry_url }}" \
          DOCKER_RUN_OPTIONAL_ARGS="--userns=keep-id --security-opt label=disable" manifests &> "{{ argotempfolder }}/manifest.log"
        # Silly redis default breaks on OCP
        sed -i -e "/runAsUser: 999/d" manifests/install.yaml
      args:
        chdir: "{{ argotempfolder }}/argo-cd"

    - name: Create argocd project
      ansible.builtin.shell: |
        export KUBECONFIG=~/{{ node }}-kubeconfig
        oc new-project argocd

    - name: Install argo manifest
      ansible.builtin.shell: |
        export KUBECONFIG=~/{{ node }}-kubeconfig
        oc apply -f manifests/install.yaml
      args:
        chdir: "{{ argotempfolder }}/argo-cd"

    - name: Template out argo route
      ansible.builtin.template:
        src: ../templates/argo-route.yaml
        dest: "{{ argotempfolder }}/argo-cd/argo-route.yaml"
        mode: "0644"

    - name: Install argo route
      ansible.builtin.shell: |
        export KUBECONFIG=~/{{ node }}-kubeconfig
        oc apply -f argo-route.yaml
      args:
        chdir: "{{ argotempfolder }}/argo-cd"
      retries: 5
      delay: 10
      register: route
      until: route is not failed

    - name: Get argo secret
      ansible.builtin.shell: |
        export KUBECONFIG=~/{{ node }}-kubeconfig
        oc extract -n argocd secrets/argocd-initial-admin-secret --to=- 2>/dev/null
      args:
        chdir: "{{ argotempfolder }}/argo-cd"
      register: argosecret
      retries: 5
      delay: 10
      until: argosecret is not failed

    - name: Print secret
      ansible.builtin.debug:
        msg:
          - "ARGO URL: argo-argocd.apps.{{ node }}.{{ domain }}"
          - "ARGO ADMIN PASSWORD: {{ argosecret.stdout }}"
