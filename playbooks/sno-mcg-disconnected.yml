---
- name: Install MCG on the three clusters private gitea
  hosts: localhost
  connection: local
  gather_facts: false
  become: true
  become_user: michele
  vars:
    mcgtempfolder: "~/sno-mcg"
    gitrepo: https://github.com/validatedpatterns/multicloud-gitops
    gitbranch: main
    hub: sno1
    spoke: sno2
  tasks:
    - name: Check that all kubeconfig files exist
      ansible.builtin.stat:
        path: "~/{{ item }}-kubeconfig"
      with_items:
        - "{{ hub }}"
        - "{{ spoke }}"
      register: kubeconfig_files

    - name: Verifying if files exists
      ansible.builtin.debug:
        msg: "File {{ item.stat.path }} exist"
      loop: "{{ kubeconfig_files.results }}"
      loop_control:
        label: "{{ item.stat.path }}"
      failed_when: not item.stat.exists

    - name: Delete temporary folder
      ansible.builtin.file:
        path: "{{ mcgtempfolder }}"
        state: absent

    - name: Create temporary folder
      ansible.builtin.file:
        path: "{{ mcgtempfolder }}/multicloud-gitops"
        state: directory
        recurse: true

    - name: Clone git repo
      ansible.builtin.git:
        repo: "{{ gitrepo }}"
        version: "{{ gitbranch }}"
        dest: "{{ mcgtempfolder }}/multicloud-gitops"
        clone: true

    - name: Install pattern on HUB/{{ hub }}
      ansible.builtin.shell: |
        set -e -o pipefail
        export KUBECONFIG=~/{{ hub }}-kubeconfig
        export EXTRA_HELM_OPTS="--set main.git.repoURL=https://gitea.ocplab.ocp/bandini/mcg --set main.patternsOperator.source=cs-community-operator-index-v{{ ocp_maj_min_version_dashed }}"
        ./pattern.sh make install
      args:
        chdir: "{{ mcgtempfolder }}/multicloud-gitops"

    - name: Wait for all argo apps to be green
      ansible.builtin.shell: |
        set -e -o pipefail
        export KUBECONFIG=~/{{ hub }}-kubeconfig
        make argo-healthcheck
      args:
        chdir: "{{ mcgtempfolder }}/multicloud-gitops"
      retries: 100
      delay: 20
      register: argo
      until: argo is not failed

    - name: Wait for ManagedCluster API to show up
      ansible.builtin.shell: |
        set -e -o pipefail
        export KUBECONFIG=~/{{ hub }}-kubeconfig
        oc api-resources | grep cluster.open-cluster-management.io/v1 | grep ManagedCluster
      retries: 50
      delay: 20
      register: managedcluster_api
      until: managedcluster_api is not failed

    - name: Add {{ spoke }}
      ansible.builtin.set_fact:
        HUBCONFIG: "{{ '~/{{ hub }}-kubeconfig' | expanduser }}"
        REGIONCONFIG: "{{ '~/{{ spoke }}-kubeconfig' | expanduser }}"

    - name: Import {{ spoke }}
      ansible.builtin.import_role:
        name: acm_import
      retries: 10
      delay: 30
      register: acm1
      until: acm1 is not failed

    - name: Wait for namespaced argo on spoke
      ansible.builtin.shell: |
        set -e -o pipefail
        export KUBECONFIG=~/{{ item }}-kubeconfig
        oc get argocds -A | grep multicloud-gitops-group-one
      args:
        chdir: "{{ mcgtempfolder }}/multicloud-gitops"
      retries: 100
      delay: 20
      register: argoregional
      until: argoregional is not failed
      with_items:
        - "{{ spoke }}"

    - name: Wait for all argo apps to be green on regional clusters
      ansible.builtin.shell: |
        set -e -o pipefail
        export KUBECONFIG=~/{{ item }}-kubeconfig
        make argo-healthcheck
      args:
        chdir: "{{ mcgtempfolder }}/multicloud-gitops"
      retries: 100
      delay: 20
      register: argoregional
      until: argoregional is not failed
      with_items:
        - "{{ spoke }}"
