---
- name: Install nginx vm
  hosts: kvm
  gather_facts: false
  become: true
  tasks:
    - name: Set root_wwn to be sure sda is the right disk
      ansible.builtin.set_fact:
        root_wwn: "disk/by-id/wwn-{{ full_cluster['nginx'].wwn }}"

    - name: Template kickstart file to the firewall where it is hosted
      ansible.builtin.template:
        src: ../templates/rhel-nginx-ks.yaml.j2
        dest: "/var/www/html/rhel-nginx.ks"
        mode: "0644"
      delegate_to: fw

    - name: Set bootloader fact
      ansible.builtin.set_fact:
        bootlines: "{{ bootlines | default({}) | combine({item: '--boot menu=on,useserial=on,uefi'}) }}"
      with_items:
        - nginx

    - name: Create Nginx VM
      ansible.builtin.command: >-
        virt-install
        --name {{ item }}
        --hvm
        --virt-type kvm
        --arch {{ arch }}
        --location {{ rhel_isos[rhel_version] }}
        --os-variant {{ rhel_variants[rhel_version] }}
        --network bridge="{{ bridge_interface }}",mac="{{ mac_prefix }}:{{ full_cluster[item].mac_nr }}"
        --vcpus {{ full_cluster[item].cpus }}
        --ram {{ full_cluster[item].ram }}
        --disk pool={{ rhel_pool }},size={{ full_cluster[item].disk }},format=qcow2,bus=scsi,cache={{ full_cluster[item].cache }},wwn={{ full_cluster[item].wwn }},serial=root
        --disk pool={{ rhel_pool }},size={{ full_cluster[item].disk2 }},format=qcow2,bus=scsi,cache={{ full_cluster[item].cache2 }},wwn={{ full_cluster[item].wwn2 }},serial={{ diskserial }}
        --check disk_size=off
        --graphics spice,listen=127.0.0.1
        --noautoconsole
        --extra-args "inst.ks=http://fw.int.rhx/rhel-nginx.ks"
        {{ bootlines[item] }}
      with_items:
        - "nginx"
      retries: 2
      delay: 10
      register: vm_creation
      until: vm_creation is not failed

    - name: Wait for vm to be stopped
      ansible.builtin.shell: |
        set -e -o pipefail
        virsh list --all | grep -w "{{ item }}" | grep -v running
      register: running
      retries: 100
      delay: 20
      until: running is not failed
      with_items:
        - "nginx"

    - name: Start "{{ item }}"
      ansible.builtin.command: |
        virsh start "{{ item }}"
      with_items:
        - "nginx"
      retries: 3
      delay: 10
      register: restart
      until: restart is not failed

- name: Wait for nginx boxes
  hosts: nginx
  gather_facts: false
  become: true
  tasks:
    - name: Wait for boxes
      ansible.builtin.wait_for_connection:

    - name: Allow nginx(http_port_t) to listen on extra tcp ports
      tags:
        - nginx-setup
      community.general.seport:
        ports: "{{ item }}"
        proto: tcp
        setype: http_port_t
        state: present
      with_items:
          - "6443"
          - "8000"
          - "22623"

    - name: Set seboolean flag on and keep it persistent across reboots
      tags:
        - nginx-setup
      ansible.posix.seboolean:
        name: "{{ item }}"
        state: true
        persistent: true
        ignore_selinux_state: true
      with_items:
          - "httpd_can_network_connect"
          - "httpd_graceful_shutdown"
          - "httpd_can_network_relay"
          - "nis_enabled"
          - "daemons_dump_core"

    - name: Setup nginx config file
      tags:
        - nginx-setup
      ansible.builtin.template:
        src: "../templates/nginx_conf.j2"
        dest: /etc/nginx/nginx.conf
        selevel: s0
        serole: object_r
        setype: httpd_config_t
        seuser: system_u
        mode: "0640"
      vars:
        bootstrap: true

    - name: Start and enable nginx
      tags:
        - nginx-setup
      ansible.builtin.systemd_service:
        name: nginx
        state: started
        enabled: true
