---
- name: Mirror ocp_versions
  hosts: kvm
  gather_facts: false
  become: true
  vars:
    oc_cli: openshift-client-linux-amd64-rhel9.tar.gz
    oc_install_fips: openshift-install-rhel9-amd64.tar.gz
    oc_install: openshift-install-linux.tar.gz
    oc_mirror: oc-mirror.rhel9.tar.gz
  tasks:
    - name: Create mirror folders
      ansible.builtin.file:
        path: "{{ mirrorfolder }}/{{ item }}"
        state: directory
        recurse: true
      with_items: "{{ ocp_versions }}"

    - name: Download oc
      ansible.builtin.get_url:
        url: "{{ openshift_mirror }}/{{ item }}/{{ oc_cli }}"
        dest: "{{ mirrorfolder }}/{{ item }}/{{ oc_cli }}"
        mode: "0640"
      environment:
        https_proxy: "{{ https_proxy | default('') }}"
      vars:
        openshift_mirror: "{{ 'https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp-dev-preview' if '-ec' in item else 'https://mirror.openshift.com/pub/openshift-v4/clients/ocp' }}"
      with_items: "{{ ocp_versions }}"

    - name: Download openshift-install fips
      ansible.builtin.get_url:
        url: "{{ openshift_mirror }}/{{ item }}/{{ oc_install_fips }}"
        dest: "{{ mirrorfolder }}/{{ item }}/{{ oc_install_fips }}"
        mode: "0640"
      environment:
        https_proxy: "{{ https_proxy | default('') }}"
      vars:
        openshift_mirror: "{{ 'https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp-dev-preview' if '-ec' in item else 'https://mirror.openshift.com/pub/openshift-v4/clients/ocp' }}"
      with_items: "{{ ocp_versions }}"

    - name: Download openshift-install
      ansible.builtin.get_url:
        url: "{{ openshift_mirror }}/{{ item }}/{{ oc_install }}"
        dest: "{{ mirrorfolder }}/{{ item }}/{{ oc_install }}"
        mode: "0640"
      environment:
        https_proxy: "{{ https_proxy | default('') }}"
      vars:
        openshift_mirror: "{{ 'https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp-dev-preview' if '-ec' in item else 'https://mirror.openshift.com/pub/openshift-v4/clients/ocp' }}"
      with_items: "{{ ocp_versions }}"

    - name: Download oc-mirror
      ansible.builtin.get_url:
        url: "{{ openshift_mirror }}/{{ item }}/{{ oc_mirror }}"
        dest: "{{ mirrorfolder }}/{{ item }}/{{ oc_mirror }}"
        mode: "0640"
      environment:
        https_proxy: "{{ https_proxy | default('') }}"
      vars:
        openshift_mirror: "{{ 'https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp-dev-preview' if '-ec' in item else 'https://mirror.openshift.com/pub/openshift-v4/clients/ocp' }}"
      with_items: "{{ ocp_versions }}"

    - name: Uncompress oc
      ansible.builtin.unarchive:
        src: "{{ mirrorfolder }}/{{ item }}/{{ oc_cli }}"
        dest: "{{ mirrorfolder }}/{{ item }}"
        remote_src: true
      with_items: "{{ ocp_versions }}"

    - name: Uncompress openshift install
      ansible.builtin.unarchive:
        src: "{{ mirrorfolder }}/{{ item }}/{{ oc_install }}"
        dest: "{{ mirrorfolder }}/{{ item }}"
        remote_src: true
      with_items: "{{ ocp_versions }}"

    - name: Uncompress openshift install fips
      ansible.builtin.unarchive:
        src: "{{ mirrorfolder }}/{{ item }}/{{ oc_install_fips }}"
        dest: "{{ mirrorfolder }}/{{ item }}"
        remote_src: true
      with_items: "{{ ocp_versions }}"

    - name: Uncompress oc-mirror
      ansible.builtin.unarchive:
        src: "{{ mirrorfolder }}/{{ item }}/{{ oc_mirror }}"
        dest: "{{ mirrorfolder }}/{{ item }}"
        remote_src: true
      with_items: "{{ ocp_versions }}"

    - name: Uncompress oc-mirror
      ansible.builtin.unarchive:
        src: "{{ mirrorfolder }}/{{ item }}/{{ oc_mirror }}"
        dest: "{{ mirrorfolder }}/{{ item }}"
        remote_src: true
      with_items: "{{ ocp_versions }}"

    - name: Make oc-mirror script executable
      ansible.builtin.file:
        path: "{{ mirrorfolder }}/{{ item }}/oc-mirror"
        mode: '0755'
        state: file
      with_items: "{{ ocp_versions }}"

    - name: Register iso URL
      ansible.builtin.shell: |
        set -e -o pipefail
        ./openshift-install coreos print-stream-json | jq . | grep location | grep "{{ arch }}" | grep iso | cut -d\" -f4
      args:
        chdir: "{{ mirrorfolder }}/{{ item }}"
      register: iso_url_raw
      with_items: "{{ ocp_versions }}"

    - name: Download RHCOS iso
      ansible.builtin.get_url:
        tmp_dest: /tmp/
        url: "{{ item.stdout }}"
        dest: "{{ mirrorfolder }}/{{ item.item }}/rhcos-live.iso"
        mode: "0664"
        validate_certs: false
      environment:
        https_proxy: "{{ https_proxy | default('') }}"
      with_items: "{{ iso_url_raw.results }}"
