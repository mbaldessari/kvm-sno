---
- name: Install RHEL box
  hosts: kvm
  gather_facts: false
  become: true
  tasks:
    - name: Template kickstart file to the firewall where it is hosted
      ansible.builtin.template:
        src: ../templates/rhel-ks.yaml.j2
        dest: "/var/www/html/rhel.ks"
        mode: "0644"
      delegate_to: fw

    - name: Create RHEL VMs
      ansible.builtin.command: >-
        virt-install
        --name {{ item }}
        --hvm
        --virt-type kvm
        --location {{ rhel_isos[rhels[item].version] }}
        --arch {{ arch }}
        --os-variant rhel9.2
        --network bridge="{{ bridge_interface }}",mac="{{ mac_prefix }}:{{ rhels[item].mac_nr }}"
        --vcpus {{ rhels[item].cpus }}
        --ram {{ rhels[item].ram }}
        --disk pool={{ rhel_pool }},size={{ rhels[item].disk }},format=qcow2,bus=scsi,cache={{ rhels[item].cache }},wwn={{ rhels[item].wwn }}
        --check disk_size=off
        --graphics spice,listen=127.0.0.1
        --noautoconsole
        --boot menu=on,useserial=on,uefi
        --extra-args "inst.ks=http://fw.int.rhx/rhel.ks"
      with_items: "{{ rhels }}"
      retries: 2
      delay: 10
      register: vm_creation
      until: vm_creation is not failed

    - name: Wait for vm to be stopped
      ansible.builtin.shell: |
        set -e -o pipefail
        virsh list --all | grep -w "{{ item }}" | grep -v running
      register: running
      retries: 100
      delay: 10
      until: running is not failed
      with_items: "{{ rhels }}"

    - name: Start "{{ item }}"
      ansible.builtin.command: |
        virsh start "{{ item }}"
      with_items: "{{ rhels }}"

- name: Wait for RHEL boxes
  hosts: rhels
  gather_facts: false
  become: true
  tasks:
    - name: Wait for boxes
      ansible.builtin.wait_for_connection:
